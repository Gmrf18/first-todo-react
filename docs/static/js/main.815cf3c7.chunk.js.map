{"version":3,"sources":["components/Navigation.js","components/TodoForm.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["Navigation","react_default","a","createElement","className","this","props","titulo","toUpperCase","cantidad","src","logo","alt","Component","TodoForm","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","title","responsible","description","priority","handleInputChange","bind","assertThisInitialized","handleSubmit","e","preventDefault","onAddTodo","setState","_e$target","target","value","name","console","log","defineProperty","onSubmit","type","onChange","placeholder","App","nTareas","todos","handleAddTodo","todo","concat","toConsumableArray","index","filter","i","_this2","map","key","onClick","removeTodo","components_Navigation","length","components_TodoForm","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.815cf3c7.chunk.js","sourcesContent":["import React, {Component} from \"react\";\nimport logo from '../logo.svg';\n\nclass Navigation extends Component {\n    render() {\n        return (\n\n            <div>\n            \t<nav className= \"navbar navbar-dark bg-dark text-white container-fluid\">\n                <span className=\"col-xs-4 col-md-2 \">\n                   {this.props.titulo.toUpperCase()} \n                   <span className= \"badge badge-pill badge-light ml-2\">\n                      {this.props.cantidad}\n                    </span>\n                  </span>\n                  <span className=\"col-12 col-md-2\"> \n                     <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                  </span>\n            \t</nav>\n            </div>\n        )\n        \n    }\n}\n\nexport default Navigation;","import React, { Component } from 'react';\n\nclass TodoForm extends Component {\n  constructor () {\n    super();\n    this.state = {\n      title: '',\n      responsible: '',\n      description: '',\n      priority: 'low'\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onAddTodo(this.state);\n    this.setState({\n      title: '',\n      responsible: '',\n      description: '',\n      priority: 'low'\n    });\n  }\n\n  handleInputChange(e) {\n    const {value, name} = e.target;\n    console.log(value, name);\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"card\">\n\t\t\t<h5 className=\"card-title mt-3\">New Task</h5>\t\n        <form onSubmit={this.handleSubmit} className=\"card-body row\">\n          \n\t\t\t\t\t<div className=\"form-group col-md-6\">\n            <input\n              type=\"text\"\n              name=\"title\"\n              className=\"form-control\"\n              value={this.state.title}\n              onChange={this.handleInputChange}\n              placeholder=\"Title\"\n              />\n          </div>\n          <div className=\"form-group col-md-6\">\n            <input\n              type=\"text\"\n              name=\"responsible\"\n              className=\"form-control\"\n              value={this.state.responsible}\n              onChange={this.handleInputChange}\n              placeholder=\"Responsible\"\n              />\n          </div>\n          <div className=\"form-group col-md-12\">\n            <input\n              type=\"text\"\n              name=\"description\"\n              className=\"form-control\"\n              value={this.state.description}\n              onChange={this.handleInputChange}\n              placeholder=\"Description\"\n              />\n          </div>\n          <div className=\"form-group col-md-8\">\n            <select\n                name=\"priority\"\n                className=\"form-control\"\n                value={this.state.priority}\n                onChange={this.handleInputChange}>\n\t\t\t\t\t\t\t<option>lower</option>\n              <option>low</option>\n              <option>medium</option>\n              <option>high</option>\n            </select>\n          </div>\n\t\t\t\t\t<div className=\"ml-auto mr-3\">\n          <button type=\"submit\" className=\"btn btn-success\">\n            Save\n          </button>\n\t\t\t\t\t</div>\n        </form>\n      </div>\n    )\n  }\n\n}\n\nexport default TodoForm;","import React, { Component } from 'react';\n\nimport './App.css';\nimport Navigation from './components/Navigation'\nimport TodoForm from './components/TodoForm'\nimport { todos } from './todos.json';\n\nclass App extends Component {\n  \n  constructor () {\n    super();\n    this.state =  {\n      title: 'AplicaciÃ³n de tareas',\n      nTareas: 10,\n      todos \n    }\n    this.handleAddTodo=this.handleAddTodo.bind(this)\n  }\n\n  handleAddTodo(todo) {\n    this.setState({\n      todos: [...this.state.todos, todo]\n    })\n\n  }\n\n  removeTodo(index) {\n   console.log(index)\n   this.setState({\n     todos: this.state.todos.filter((e, i) => {\n       return i !== index\n     })\n   })\n\n  }\n\n  render() {\n   const todos =  this.state.todos.map((todo, index) =>  \n   (\n   <div className=\"col-md-4 col-sm-6 mb-4\" key={index}>\n     <div className=\"card \">\n       <div className=\"card-body\">\n         <div className=\"card-header\">\n           <h4>{todo.title}</h4>\n           <span className=\"badge badge-pill badge-info ml-2\">\n             {todo.priority}\n           </span>\n         </div>\n         <p className=\"card-text\">\n           {todo.description}\n         </p>\n         <p className=\"card-text\">\n           {todo.responsible}\n         </p>\n         <div className=\"card-footer\">\n         <button className=\"btn btn-danger\" onClick={this.removeTodo.bind(this,index) } >\n         X\n         </button>\n         </div>\n       </div>\n     </div>\n   </div>\n   ))\n\n\n    \n    return (\n    <div className=\"App\">\n      <Navigation titulo=\"Tasks By Gmrf18\" cantidad= {todos.length} />\n     <div className=\"App-body\">\n      <div className= \"container mt-4\">\n        \n        <div className=\"mb-5\">\n        <TodoForm onAddTodo={this.handleAddTodo} />\n        </div>\n        \n        <div className= \"row\">\n          \n         {todos}\n        </div>\n      </div>\n     </div>\n    </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}